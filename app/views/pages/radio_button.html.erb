<%= component_page do %>
  <%= component_header do %>
    <%= title "Radio button" %>
    <%= lead "There can be only one." %>
    <%= render NuggetsComponent.new(%i[component]) %>
  <% end %>

  <%= section do %>
    <%= section_title "Example" %>
    <%= example_file "radio_button_basic" %>

    <%= inline_example do %>
      {%= nk_radio_button "name", "value" %}
    <% end %>

    <div class="prose">
      <p>API tries to match <a href="https://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-radio_button">Rails' own <code>radio_button()</code> helper</a>. See <a href="#api-compatibility">Form use</a> and <a href="#api-compatibility">API compatibility</a> for examples.</p>
    </div>
  <% end %>

  <%= render "install_section", component_name: "radio_button" %>
  <%= render "dependencies_section", component_name: "radio_button" %>

  <%= section do %>
    <%= section_title "Form use" %>

    <div class="prose">
      <p>To use in forms, it's easiest to use the <%= link_to "Form Builder", page_path(:form_builder) %>.</p>
      <p><code>f.radio_button</code> tries to match Rails' own API.</p>
      <p>For extra convenience use the <code>f.field</code> method.</p>
    </div>

    <%= example_file "radio_button_form" %>
    <%= inline_example do %>
      {%= nk_form_for @golem do |f| %}
        {%= f.field :element,
          options: Element.pluck(:name, :slug),
          as: :radio_group,
          label: "Golem type",
          description: "He'll be invincible" %}
      {% end %}
    <% end %>
  <% end %>

  <%= section do %>
    <%= section_title "With a label" %>

    <div class="prose">
      <p>To add a label, use the <code>label:</code> argument.</p>
    </div>

    <%= example_file "radio_button_with_label" %>

    <%= inline_example do %>
      {%= nk_radio_button label: "Accept your fate" %}
    <% end %>
  <% end %>

  <%= section do %>
    <%= section_title "Radio button group" %>

    <div class="prose">
      <p>Display multiple related radio buttons in a group under the same title.</p>
    </div>

    <%= example_file "radio_button_group" %>

    <%= inline_example do %>
      {%= nk_radio_button_group value: "zero" do |g| %}
        {%= g.title "Choose your poison" %}
        {%= g.item name: "poison", value: "coke", label: "Coke" %}
        {%= g.item name: "poison", value: "zero", label: "Coke Zero" %}
      {% end %}
    <% end %>
  <% end %>

  <%= section do %>
    <%= section_title "Usage" %>

    <div class="prose">
      <p><strong>NB:</strong> While <code>radio_button</code> supports Rails' API, using <code>f.field</code> is recommended.</p>
    </div>

    <%= render PropTable.new("
          nk_radio_button(
            compat_object_name = nil,
            compat_method = nil,
            compat_tag_value = nil,
            compat_options = {},
            label: nil,
            **attrs
          )") do |t| %>
      <%= t.prop "compat_object_name", "nil" do %>
        <%= nk_badge "API compatibility", size: :sm %> Relevant object
      <% end %>
      <%= t.prop "compat_method", "nil" do %>
        <%= nk_badge "API compatibility", size: :sm %> Object attribute
      <% end %>
      <%= t.prop "compat_tag_value", 'nil' do %>
        <%= nk_badge "API compatibility", size: :sm %> Value of attribute
      <% end %>
      <%= t.prop "compat_options", "{}" do %>
        <%= nk_badge "API compatibility", size: :sm %> Options for radio button
      <% end %>
      <%= t.prop(:label, "nil") do %>
        Text label for radio button
      <% end %>
      <%= t.attrs_prop(:input) %>
    <% end %>
  <% end %>
<% end %>
