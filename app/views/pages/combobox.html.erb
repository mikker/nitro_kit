<%= component_page do %>
  <%= component_header do %>
    <%= title "Combobox" %>
    <%= lead "Like a text input and a select box had a baby" %>
    <%= render NuggetsComponent.new(%i[component js]) %>
  <% end %>

  <%= section do %>
    <%= section_title "Example" %>
    <%= example_file "combobox_basic" %>
    <%= inline_example do %>
      {%= nk_combobox "name", %w[mario_kart need_for_speed] %}
    <% end %>
  <% end %>

  <%= render "install_section", component_name: "combobox" %>
  <%= render "dependencies_section", component_name: "dropdown" %>

  <%= section do %>
    <%= section_title "Form use" %>

    <div class="prose">
      <p>To use in forms, it's easiest to use the <%= link_to "Form Builder", page_path(:form_builder) %>.</p>
      <p>For extra convenience use the <code>f.field</code> method.</p>
    </div>

    <%= example_file "combobox_form" %>
    <%= inline_example do %>
      {%= nk_form_for :high_score do |f| %}
        {%= f.field :game_id,
          as: :combobox,
          placeholder: "Best game ever",
          label: "Game",
          description: "In which game did you beat the world record again?",
          options: Game.pluck(:name, :id) %>
      {% end %}
    <% end %>
  <% end %>

  <%= section do %>
    <%= section_title "Options" %>

    <div class="prose">
      <p>Combobox expects an array of <code>[label, value]</code> tuples similar to Rails' <code>options_for_select</code>.</p>
      <p>Eventually I would love to add support for async loading results, like autocomplete search or similar.</p>
    </div>
  <% end %>

  <%= section do %>
    <%= section_title "Usage" %>

    <div class="prose">
      <p><strong>NB:</strong> Using via <code>f.field</code> is recommended.</p>
    </div>

    <%= render PropTable.new("
      nk_combobox(
        options: [],
        placement: nil,
        tab_inserts_suggestions: nil,
        first_option_selection_mode: nil,
        scroll_into_view_options: nil,
        **args
      )") do |t| %>
      <%= t.prop "options", "[]" do %>
        An array of <code>[label, value]</code> tuples, like <code>[["Mario Kart", "mario_kart"], ["Need for Speed", "need_for_speed"]]</code>
      <% end %>
      <%= t.prop "placement", "nil" do %>
        <%= nk_badge "Floating UI", size: :sm %> Placement of the dropdown
      <% end %>
      <%= t.prop "tab_inserts_suggestions", "true" do %>
        <%= nk_badge "@github/combobox-nav", size: :sm %> <%= link_to "Docs", "https://github.com/github/combobox-nav/tree/main?tab=readme-ov-file#settings", target: :_blank, class: "link" %>
      <% end %>
      <%= t.prop "first_option_selection_mode", '"selected"' do %>
        <%= nk_badge "@github/combobox-nav", size: :sm %> <%= link_to "Docs", "https://github.com/github/combobox-nav/tree/main?tab=readme-ov-file#settings", target: :_blank, class: "link" %>
      <% end %>
      <%= t.prop "scroll_into_view_options", '{block: "nearest", inline: "nearest"}' do %>
        <%= nk_badge "@github/combobox-nav", size: :sm %> <%= link_to "Docs", "https://github.com/github/combobox-nav/tree/main?tab=readme-ov-file#settings", target: :_blank, class: "link" %>
      <% end %>
      <%= t.attrs_prop(:input) %>
    <% end %>
  <% end %>
<% end %>
